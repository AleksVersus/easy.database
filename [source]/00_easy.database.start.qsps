QSP-Game Стартовая локация Easy.DataBase
# edb
"
	Easy DataBase -> Система Управления Базой Данных

	bd - вывод информации о базе данных

"
inclib 'easy.math.qsp'
$usercom = 'edb.usercom'
--- edb ---------------------------------



# edb.usercom
if $user_text='bd':
	loop local i=0 while i<EASY_DATABASE['data_table.counter'] step i+=1:
		*pl "data_table.<<i>>.id = "+$EASY_DATABASE['data_table',i]
	end
	*pl "data_table.counter = "+$str(EASY_DATABASE['data_table.counter'])
	*pl "data_table.number = "+$str(EASY_DATABASE['data_table.number'])
else
	dynamic $user_text
end
--- edb.usercom ---------------------------------

Команды можно принимать как одиночные, так и целым списком.
Каждая команда должна записываться отдельной строкой, никаких объединений (кроме возможно транзакций)

Распарсиваем с помощью instr, отыскивая в команде точку и фигурную скобку.

1. Если точка найдена раньше, значит имеем дело со сылками к объектам команды, последовательно извлекаем объекты
2. Если фигурная скобка найдена раньше точки, значит дальше идут исключительно аргументы, и мы парсим аргументы
3. Если не найдены ни точки ни фигурные скобки, значит команда кончилась и мы скорее всего имеем дело с неявным методом

QSP-Game локация для распарсивания команд
$args[0] - полный список команд
# edb.parsecom
!@ объявляем локальные переменные
local $comand_list
!@ разбиваем команды на отдельные строки и помещаем в массив
@em.str.inArr($args[0],$comand_list,'',"[notspace][trim][strip]")
loop local i,size=0,arrsize('$comand_list') while i<size step i+=1:
	!@ непосредственно здесь уже парсим каждую отдельную команду
	dynamic {
		!@ внутрь динамика передаётся команда. Это позволяет использовать внутри динамика локальные переменные
		local $command=$args[0]	& !@ присваиваем команду локальной переменной
		local dot_instr, brk_instr	& !@ вхождение точки и вхождение скобки
		
	},$command_list[i]
end
--- edb.parsecom ---------------------------------

!@pp:var(em_str_inarr)
