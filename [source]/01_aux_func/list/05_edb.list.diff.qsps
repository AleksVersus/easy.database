QSP-Game вычитание списков

На вход принимает два списка. Убирает из первого списка элементы, которые встречаются во втором списке

!@ $0 - уменьшаемый список
!@ $1 - вычитаемый список
!@ $2 - управляющее слово [union] или [un] - убирает из обоих списков совпадающие элементы, а на выход даёт несовпадающие
# edb.list.diff
!@ объявляем локальные переменные
local $src_list_, $del_list_, $comm_ = $args[0], $args[1], $lcase($args[2])
!@ локальные массивы для списков
local $first_list_, $second_list_
!@ правильная упарвляющая конструкция
if instr($comm_, '[un]') <> 0: $comm_ = $replace($comm_, '[un]', '[union]')
!@ оба списка запихиваем в массивы
scanstr '$first_list_', $src_list_, '[^|]+'
scanstr '$second_list_', $del_list_, '[^|]+'
!@ теперь сравниваем списки, оставляя только несовпадающие значения
loop local i, size_, pos_ = 0, max(arrsize('first_list_'), arrsize('second_list_')), -1 while i<size_ step i+=1:
	if $first_list_[i] <> '':
		pos_ = arrpos('$second_list_', $first_list_[i])
		if pos_ <> -1:
			$first_list_[i] = ''
			$second_list_[pos_] = ''
		end
	else
		i = size_
	end
end
!@ когда из списков удалены все совпадающие значения, составляем новый список
loop local i, size_ = 0, arrsize('first_list_') while i<size_ step i+=1:
	if $first_list_[i] <> '': $result += '|' + $first_list_[i]
end
if instr($comm_, '[union]') <> 0:
	loop local i, size_ = 0, arrsize('second_list_') while i<size_ step i+=1:
		if $second_list_[i] <> '': $result += '|' + $second_list_[i]
	end
end
$result = $mid($result, len('|') + 1)
--- edb.list.diff ---------------------------------
