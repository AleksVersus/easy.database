QSP-Game Заполнение строки значениями

Последний аргумент - кортеж из идентификатора строки и идентификатора таблицы данных, либо только один из идентификаторов
Остальные аргументы могут быть просто значениями, или кортежами из идентификатора
столбца и значения.

# edb.row.fill
if $EASY_DATABASE['ID'] = '': msg "row.fill: Ошибка. База данных не инициализирована." & exit
local $pk_, $data_table_ = $args[]
local kill_last_ = 2
if no @edb.list.is_el($EASY_DATABASE['data_tables.ids'], $data_table_):
	!@ если последний аргумент не содержит идентификатор таблицы данных,
	!@ значит он содержит либо только идентификатор строки, либо значение
	!@ для размещения в строке:
	$data_table_ = $EASY_DATABASE['current_data_table']
	kill_last_ -= 1
end
if $data_table_ = '': msg "row.fill: Ошибка. Не указан идентификатор таблицы данных." & exit
if $arritem('$<<$data_table_>>_id', $pk_) <> $pk_:
	!@ если последний аргумент не содержит идентификатор строки,
	!@ значит он содержит значение для размещения в строке
	$pk_ = $arritem('$<<$data_table_>>', 'current_row')
	kill_last_ -= 1
end
if $pk_ = '': msg "row.fill: Ошибка. Не указан идентификатор строки." & exit
!@ если оказалось, что последний аргумент содержит как минимум один из идентификаторов, уничтожаем его
if kill_last_:	killvar '$args', arrsize('$args') - 1
local $columns_list_ = @edb.list.remove($arritem('$<<$data_table_>>', 'columns'), 'id')
local $columns_
@em.str.inArr($columns_list_, '$columns_', '|')
local $value_, $col_, $col_type_, one_value_
loop local i = 0 while i < arrsize('$columns_') and i < arrsize('$args') step i += 1:
	$value_, $col_ = $args[i]
	if $value_ = $col_ or no @edb.list.is_el($columns_list_, $col_):
		$col_ = $columns_[i]
		one_value_ = 1
	else
		one_value_ = 0
	end
	$col_type_ = $arritem("$<<$data_table_>>_<<$col_>>", 0)
	if $col_type_ = 'num':
		if one_value_: $value_ = $str(args[i])
		dynamic "<<$data_table_>>_<<$col_>>['<<$pk_>>'] = <<$value_>>"
	else:
		dynamic "$<<$data_table_>>_<<$col_>>['<<$pk_>>'] = '<<$value_>>'"
	end
end
!@ Не помечаем изменяемые колонки, как текущие, поскольку может статься так,
!@ что мы не будем знать, на какой колонке закончилось заполнение.
!@ указанная таблица данных помечается, как текущая
@edb.dt.set_cur($data_table_)
!@ помечаем текущую строку, как текущую
@edb.row.set_cur($pk_, $data_table_)
--- edb.row.fill ---------------------------------
