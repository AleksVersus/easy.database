QSP-Game Поиск по таблице данных

Внимание!!! Эта функция использует несколько циклов, в т.ч. вложенных. Не используйте без острой необходимости.

$args[0] - регулярное выражение по которому производится поиск.
	Внимание!!! Будет найден элемент точно соответствующий регулярке!
	Если тип колонки num - поиск на точное совпадение.
$args[1] - колонка, по которой производим поиск
$args[2] - идентификатор таблицы данных
$args[3] - размер чанка
$args[4] ... $args[18] — дополнительные фильтры в виде кортежей:
	(колонка, значение, управление) - управление:
		[regexp] - регулярка. Точное соответствие. Не работает для колонок типа num
		[callback] - функция колбэк принимающая, как аргумент значение элемента, и возвращающая 1 или 0, в зависимости от результатов фильтрации
		[strict] - проверяем на точное соответствие. Режим по умолчанию для колонок num.

# edb.dt.find
!@pp:if(fuse):include
!@ проверка инициализации базы данных
if $EASY_DATABASE['ID'] = '': msg "edb.dt.find: Ошибка. База данных не инициализирована." & exit
!@ проверка существования указанной таблицы данных
if $args[2] = '': $args[2] = $EASY_DATABASE['current_data_table']
if $args[2] = '': msg "edb.dt.find: Ошибка. Не указан идентификатор таблицы данных" & exit
if $arritem('$<<$args[2]>>', 'ID') <> $args[2]: msg "edb.dt.find: Ошибка. Таблица данных «<<$args[2]>>» не существует." & exit
!@ проверка существования колонки
if $args[1] = '': $args[1] = $arritem('$<<$args[2]>>', 'current_col')
if $args[1] = '': msg "edb.dt.find: Ошибка. Не указана колонка поиска." & exit
if arrsize('$<<$args[2]>>_<<$args[1]>>') < 1: msg "edb.dt.find: Ошибка. Колонка «<<$args[1]>>» не существует." & exit
!@pp:endif
!@ размер чанка по умолчанию
if args[3] = 0: args[3] = 10000
!@ номер последнего элемента в массиве args на старте:
args[20] = arrsize('$args') - 1
!@ стартовый номер чанка
args[21] = 1
!@ список колонок в таблице данных:
$args[22] = $arritem('$<<$args[2]>>', 'columns')
!@ тип основной колонки для поиска
$args[29] = $arritem('$<<$args[2]>>_<<$args[1]>>', 0)
!@ объявлем локальные массивы, которые используются для хранения чанков
local edb_dt_find_chunk_array_1_, edb_dt_find_chunk_array_2_, edb_dt_find_chunk_array_3_
local edb_dt_find_chunk_array_4_, edb_dt_find_chunk_array_5_, edb_dt_find_chunk_array_6_
local edb_dt_find_chunk_array_7_, edb_dt_find_chunk_array_8_, edb_dt_find_chunk_array_9_
local edb_dt_find_chunk_array_10_, edb_dt_find_chunk_array_11_, edb_dt_find_chunk_array_12_
local edb_dt_find_chunk_array_13_, edb_dt_find_chunk_array_14_, edb_dt_find_chunk_array_15_
local edb_dt_find_chunk_count_

!@ ---------------------- получаем чанк -------------------------
edb_dt_find_temp_count_ = 1
$args[23] = {
	$args[20] = 'edb_dt_find_chunk_array_<<edb_dt_find_chunk_count_>>_'
	copyarr $args[20], '$<<$args[1]>>_<<$args[0]>>', val($args[2]), val($args[3])
	edb_dt_find_chunk_count_ += 1
	$result = '[<<$args[0]>>:<<$args[20]>>]'
}
$args[24] = @edb.list.for_each($args[22], $args[23], '|', $args[2], $str(args[21]), $str(args[3]))
!@ ---------------------- получаем чанк -------------------------

!@ поиск производится до тех пор, пока не будет найден элемент, соответствующий регулярному выражению
!@ а так же соответствующий регуляркам фильтров
$args[27] = @em.tag.getNum($args[24], $args[1])
loop args[25], args[26], args[28] = 1, -1, 0 while args[25]:
	if $args[29] = 'num':
		args[26] = arrpos($args[27], args[0], args[26]+1)
	else:
		args[26] = arrcomp($args[27], $args[0], args[26]+1)
	end
	if args[26] <> -1 and args[28] <> args[26]:
		args[28] = args[26]
		if args[20] > 3:
			!@ если номер последнего args на старте больше 3, значит переданы доп фильтры

		else:
			!@ если доп фильтры не переданы, можно прервать проверку, т.к. нужный элемент найден
			args[25] = 0
		end
	else:
		args[25] = 0 & !@ прерываем цикл
	end
end
if args[26] <> -1:
	!@ если элемент найден, вычисляем идентификатор его строки и возвращаем элемент
	$result = $arritem('$<<$args[2]>>_id', args[26]+args[21])
	exit
else:
	!@ если элемент не найден, можно прошерстить следующий чанк

	!@ увеличиваем стартовый номер чанка (возможно в step)

	!@ повторяем
end
--- edb.dt.find ---------------------------------

args[20] — номер последнего элемента в массиве args на старте. Не должен быть меньше 3
args[21] - стартовый номер чанка
$args[22] - список колонок в таблице данных
$args[23] - функция колбэк
$args[24] - псевдословарь соответствия оригинальной колонки чанку.
args[25] - маркер цикла. Пока равен 1, цикл запущен.
args[26] - следующая позиция, с которой начинается поиск.
$args[27] - название временного массива с чанком
args[28] - предохранитель от непрерывности для цикла
$args[29] - тип основной колонки
