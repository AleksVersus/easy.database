QSP-Game Точка входа и отладчик

# edb.start

if $args[0] = '':
	!@ подключение библиотеки easy.math:
	inclib 'easy.math.qsp'
	!@ включаем обработчик строки ввода
	$usercom[] = 'edb.usercom'
	!@ включаем распознавание html
	usehtml=1
	!@ моноширинный шрифт
	$fname = 'Consolas'
	!@ отключаем ненужные окна
	showacts 0
	showobjs 0

	"
	Easy DataBase -> Система Управления Базой Данных.

	Репозиторий с исходниками библиотеки:

	*	https://github.com/AleksVersus/easy.math

	По всем вопросам и предложениям обращаться:

	*	aleksversus@mail.ru
	*	https://vk.com/id40090736

	Заходите на мой сайт:

	*	aleksversus.narod.ru
	
	Обучающие видео по программированию на QSP:
	
	*	https://www.youtube.com/channel/UCwX8RW2B9yTUFdlivtCGAgA

	Вы можете опробовать управление базой данных, вводя команды в строку ввода.

	Все команды должны начинаться с ключевого слова `edb`.

	Для получения списка команд, введите `edb help` в строку ввода.

	"
elseif $args[0]='version':
	result = 10
elseif $args[0] = 'em-version':
	local v = func('!easy.math!', 'version')
	$args['version'] = $str(v / 1000)+'.'+$str(v mod 1000 / 100)+'.'+$str(v mod 100)
	msg "Используемая версия `easy.math`: <<$args['version']>>. Необходимая версия: 3.0.0"
end

--- edb.start ---------------------------------



# edb.usercom
!@ проверяем, присутствует ли в строке от пользователя команда к парсеру
!@ local $bd_command=$strfind($user_text,'^\s*(>\s*\S+|bd)(\.\S+(\{[\s\S]*?\})?)*\s*$')

if instr($user_text, 'edb') = 1:
	local $command_line_ = $trim($mid($user_text, 4))
	if $command_line_ = 'help':
		*pl 'Основные команды для работы с модулем (ключевое слово `edb` опущено):'
		*pl '* help - вывод справки по модулю `easy.database`.'
		*pl '* run - выполнить следующий после `run` текст, как строку кода QSP.'
		*pl '* verison — текущая версия модуля.'
		*pl '* required em — информация по используемому и необходимому easy.math.'
		*pl '* gen id - генерирует uuid.'
		*pl '* init - инициализирует базу данных'
		*pl '* > - выводит информацию о базе данных' 
	elseif $command_line_ = 'required em' or $command_line_ = 'required easy.math':
		*pl @edb.start('em-version')
	elseif $command_line_ = 'version':
		local v = @edb.start('version')
		*pl $str(v / 1000)+'.'+$str(v mod 1000 / 100)+'.'+$str(v mod 100)
	elseif $command_line_ = 'gen id':
		*pl @em.gen_uuid()
	elseif $command_line_ = 'test':
		@edb.init()
		@edb.new_table('objects', 'Объекты', '[hex:6]')
		!@ @edb.new_table('dialogs')
		@edb.dt.new_col('body', 'dict', 'objects')
		@edb.dt.new_col('place', 'str', 'objects')
		!@ @edb.dt.new_col('include')
		@edb.dt.new_col('count', 'num')
		local $s = @edb.dt.new_row('objects')
		local $r = @edb.dt.new_row('objects')
		local $i = @edb.dt.new_row()
		local $d = @edb.dt.new_row()
		local $n = @edb.dt.new_row()
		@edb.row.fill('Старый меч', 'сумка', 1, ($i, 'objects'))
		@edb.row.fill('Старый шлем', 'сумка', 15, $n)
		@edb.row.fill(('Пепел', 'body'), (2, 'count'), $s)
		@edb.dt.print('objects', '[inmain]')
		@edb.dt.del_col('include', 'objects')
		@edb.cell.set_value('Инвентарь', $s, 'place', 'objects')
		@edb.dt.print('objects', '[inmain]')
		@edb.col.print('body', 'objects', '[inmain]')
		@edb.col.print('count', 'objects', '[inmain] [range:3-5]')
		@edb.row.print($i, 'objects', '[inmain]')
		@edb.cell.get_value($i, 'place', 'objects')
		@edb.cell.get_value($s, 'place')
		@edb.cell.get_value($n)
		@edb.row.set_cur($r)
		@edb.col.set_cur('body')
		@edb.row.set_next('Яблоко')
		@edb.row.set_next('Инвентарь')
		@edb.row.set_next(25)
		@edb.dt.print('objects', '[inmain]')
		@edb.row.set_cur($s)
		@edb.col.set_cur('count')
		loop local i = 1 while i < 10 step i += 1:
			@edb.col.set_next(i * 10 + 1)
		end
		@edb.dt.print('objects', '[inmain]')
		@edb.cell.add(34)
		@edb.col.set_cur('place')
		@edb.cell.add('34')
		@edb.dt.print('objects', '[inmain]')
		@edb.row.exchange($d, $n)
		@edb.dt.print('objects', '[inmain]')
		@edb.dt.find('Старый')
		@edb.row.extract('septem', $i)
		@edb.row.inject('septem', $n)
		@em.arr.print('$septem')
		@edb.dt.print('objects', '[inmain]')
		@edb.print('[all arrays]')
		@edb.dt.print('objects', '[inmain] [range:2-4]')
	elseif $command_line_ = 'init':
		@edb.init()
		*pl 'Инициализирована база данных. id = ' + $EASY_DATABASE['ID']
	elseif $command_line_ = '>':
		*pl @edb.print('[all arrays]')
	elseif instr($command_line_, '>') = 1:
		local $commands_
		@em.str.inArr($mid($command_line_, 2), '$commands_', '>', '[strip]')
		if $commands_[0] = 'new_table' and $commands_[1] <> '':
			@edb.new_table($commands_[1])
			*pl "Создана таблица данных «<<$commands_[1]>>»."
		elseif $commands_[0] = 'del_table' and $commands_[1] <> '':
			@edb.del_table($commands_[1])
			*pl "Удалена таблица данных «<<$commands_[1]>>»."
		elseif @edb.list.is_el($EASY_DATABASE['data_tables.ids'], $commands_[0]):
			if $commands_[1] = 'print':
				@edb.dt.print($commands_[0], '[inmain]')
			end
		end
	elseif instr($command_line_, 'run') <> 0:
		dynamic $trim($mid($command_line_, 4))
	end
end
--- edb.usercom ---------------------------------

! Включение/отключение предохранителей. Если False, или переменная edb_fuse не определена, - предохранители отключены.
!@pp:var(edb_fuse)
! Включение/отключение полной сборки easy.math. Если Off, собираются только задействованные в модуле функции easy.math
!@pp:var(build_easy_math=Off)

! для каждого файла/локации, использующей функции easy.math задан вот такой блок настроек.
! Если build_easy_math не равен Off эти блоки выполняться не будут. Таким образом
! в выходной файл соберутся все функции easy.math
!@pp:if(build_easy_math!=Off):nopp
!@pp:var(em_gen_uuid)
!@pp:var(em_arr_print)
!@pp:var(em_str_inarr)
!@pp:endif