QSP-Game Вывод информации о строке на экран

!@ $0 - идентификатор строки
!@ $1 - идентификатор таблицы данных
!@ $2 - управление: [list] - выводится только список значений
!@ $r - вывод сдержимого строки на печать
# edb.row.print
!@ основные локальные переменные
if $args[1] = '': $args[1] = $EASY_DATABASE['current_data_table']
!@pp:if(edb_fuse):include
if $EASY_DATABASE['ID'] = '': msg "row.print: Ошибка. База данных не инициализирована." & exit
if $args[1] = '': msg "row.print: Ошибка. Не указан идентификатор таблицы данных." & exit
if no @edb.list.is_el($EASY_DATABASE['data_tables_ids'], $args[1]): msg "row.print: Ошибка. Таблица данных `<<$args[1]>>` не существует." & exit
!@pp:endif
if $args[0] = '': $args[0] = $arritem('$<<$args[1]>>', 'current_row')
!@ Распечатать строку, которой нет в таблице данных, нельзя, однако ошибку в игре это не вызовет.
if no @edb.row.is($args[0], $args[1]): exit
$args[2] = $lcase($args[2])
!@ объявляем дополнительные локальные переменные:
$args[20] = ''
!@ получаем список колонок:
$args[22] = @edb.dt.columns($args[1])
!@ задаём описание строки
if no instr($args[2], '[list]'): $args[20] += 'Строка: <<$args[0]>>' + @em.RN

!@ извлекаем значения из колонок
$args[23] = {
	$result = $args[2]
	$args[20] = @edb.col.type($args[0], $args[4])
	$args[21] = @edb.pref_by_type($args[20])
	$result += $arritem('<<$args[21]>><<$args[4]>>_<<$args[0]>>', $args[3]) + '|'
}
$args[24] = @edb.list.for_each($args[22], $args[23], $args[0], $args[1])
$args[20] += $mid($args[24], 1, len($args[24]) - 1)

@edb.row.set_cur($args[0], $args[1])
$result = $args[20]
--- edb.row.print ---------------------------------

Поскольку функция работает с именами массивов, здесь не используются локальные переменные,
чтобы избежать пересечения с именами массивов.

!@ $20 - $export_, переменная для фиксации возвращаемого текста
!@ $22 - $column_list_, переменная, в которую помещаем список колонок
!@ $23 - $callback_, переменная, в которую помещается "коллбэк"-функция для обработки элементов списка
!@ $24 - список значений строки

{:for_each
	0 - column list
	1 - callback
	2 - primary key
	3 - table
	{:callback
		0 - item (column)
		1 - tail
		2 - result
		3 - primary key (0)
		4 - table (1)
	}
}
