QSP-Game Создаёт строку в таблице данных и возвращает идентификатор этой строки

!@ $0 - идентификатор таблицы данных
!@ $1 - требуемый идентификатор строки. ВНИМАНИЕ!!! Эта опция должна использоваться только при необходимости. Если нет острой необходимости, не используйте данную опцию. При использовании игнорируется проверка на дублирование первичных ключей.
# edb.dt.new_row
if $args[0] = '': $args[0] = $EASY_DATABASE['current_data_table']
!@pp:if(edb_fuse):include
if $EASY_DATABASE['ID'] = '':	msg "dt.new_row: Ошибка. База данных не инициализирована." & exit
if $args[0] = '':	msg 'dt.new_row: Ошибка. Не указан идентификатор таблицы данных.' & exit
if no @edb.list.is_el($EASY_DATABASE['data_tables_ids'], $args[0]):	msg 'dt.new_row: Ошибка. Таблица данных `<<$args[0]>>` не существует.' & exit
!@pp:endif
!@ название колонки первичных ключей и таблицы данных
$args[20] = '$<<$args[0]>>_id'
if $args[1] <> '':
	$args[24] = $args[1]
	jump 'key_create_end'
end

!@ ------------------------- генерация первичных ключей -------------------------
	args[25] = 16	& !@ 16 символов
	loop args[26] = 0 while args[26] < 100000 step args[26] += 1:
		$args[24] = @em.str.random(args[25],'[inc][\d][\z][\я]')
		if $arritem($args[20], $args[24]) = '': jump 'key_create_end'
	end
	!@ было решено отказаться от различных способов генерации первичных ключей, поскольку
	!@ этот способ должен гарантированно давать более 5*10^33 комбинаций, что превышает все
	!@ возможные пределы и ограничения QSP
!@ ------------------------- генерация первичных ключей -------------------------

:key_create_end
if $args[24] <> '':
	!@ если ключ сгенерирован, создаём строку.
	!@ Строка создаётся генерацией новых элементов во всех массивах столбцов.
	$args[27] = @edb.dt.columns($args[0])
	$args[28] = {
		$args[20] = @edb.col.type($args[0], $args[3])
		if $args[20] = 'tuple':
			dynamic "%<<$args[3]>>_<<$args[0]>>['<<$args[4]>>'] = []"
		elseif $args[20] = 'num':
			dynamic "<<$args[3]>>_<<$args[0]>>['<<$args[4]>>'] = 0"
		elseif $args[20] = 'ids':
			dynamic "$<<$args[3]>>_<<$args[0]>>['<<$args[4]>>'] = '<<$args[4]>>'"
		else:
			dynamic "$<<$args[3]>>_<<$args[0]>>['<<$args[4]>>'] = ''"
		end
	}
	@edb.list.for_each($args[27], $args[28], $args[0], $args[24])
	!@ устанавливаем текущую строку
	@edb.row.set_cur($args[24], $args[0])
	!@ возвращаем идентификатор созданной строки
	$result = $args[24] & exit
end
--- edb.dt.new_row ---------------------------------


$args[20] - название колонки первичных ключей
$args[24] - первичный ключ
args[25] - num_
args[26] - заменяет i
$args[27] - список колонок
$args[28] - функция типа колбэк для обработки списка колонок


!@pp:if(build_easy_math!=Off):nopp
!@pp:var(em_abs)
!@pp:var(em_gen_uuid)
!@pp:var(em_str_random)
!@pp:var(em_tag_getnum)
!@pp:endif


{:for_each
	0 - column list
	1 - callback
	2 - table
	3 - primary key
	{:callback
		0 - item
		1 - tail
		2 - result
		3 - table
		4 - primary key
		20 - column type
	}
}