==Заготовки для парсера команд==

Команды записываются по принципу:

	объект.методОбъекта{параметр_1,параметр_2,параметр_3, ...}

В действительности методы не являются методами, а объекты - объектами, просто подобная абстракиця удобна для представления.

Объекты адресуются согласно иерархии:

	База Данных > Таблица Данных > Столбец ~ Строка > тэг_1 > тэг_2 > ...

Таким образом мы можем получить доступ не только к значению ячейки, но и к её внутреннему содержимому.

	bd.object.id~12.np.оружие.proveThis

Чтобы передать методу параметр, используются фигурные скобки:

	bd.newTable{personage}

Для разделения параметров используется запятая, например:

	bd.newTable{object,personage,dialogue,etc}

Каждый параметр отвечает понятию "значение", и при записи значений нельзя использовать фигурные скобки и запятые. Если требуется указать в значении фигурную скобку или запятую используйте ссылки на аргументы, а сами значения передавайте остальными аргументами к процедуре 'sql'.

	gosub 'sql','object.newString{eRA56yuDf,<tag>,INVENTORY,,4,15,%args1%}','goto "Dialog","Aleksis Verichev",3,567'

Можно указать текущую Таблицу, в ней Стобец и Строку, однако для любого метода, записанного в команде необходима ссылка хотя бы на один объект. Например, у нас указана текущая Таблица object. Нельзя просто написать метод:

	newCol{id,body}

чтобы добавить в текущую таблицу столбцы. Нужно обязательно сослаться на Таблицу:

	object.newCol{id,body}

--Объекты в командах--

Имена объектов в командах не должны пересекаться с названиями методов/команд, в т.ч. имена тегов.

-Неявный метод-

Неявный метод. Данный метод возвращает строку [avsbd_objecttype:Тип Объекта][avsbd_objectname:Имя Объекта][avsbd_objectcontent:Содержимое объекта:avsbd_objectcontent]
	Вызов неявного метода осуществляется путём обращения к объекту без явного указания метода. Примеры в каждом объекте отдельно.

-bd — объект база данных, методы/команды:-

	newTable — создать новую таблицу. Пример: 'bd.newTable{object}'
	delTable — удалить таблицу. Пример: 'bd.delTable{object}'

	Неявный метод:

	bd — вернёт [avsbd_objecttype:data_base][avsbd_objectname:bd][avsbd_objectcontent:Здесь будут перчислены названия созданных таблиц данных через запятую:avsbd_objectcontent]

-объект Таблица, методы/команды:-

	newCol — создаёт новую колонку (столбец) в таблице
		object.newCol{id,body,position,include,kolvo,charge,run} — создаём несколько новых колонок в таблице "object"
		Имена Столбцов не должны состоять из одних лишь чисел, не должны включать спецсимволы в т.ч. знаки препинания.

	delCol — удаляет колонку в таблице
		object.delCol{id,body,run} — удаляем несколько колонок в таблице. При этом колонки смещаются по своему положению "влево".

	newString — создаёт новую строку в таблице
		object.newString — создаём новую пустую строку/*, при этом строка помечается, как текущая*/
		object.newString{eRA56yuDf,<tag>,INVENTORY,,4,15,goto 'Dialog'} — создаём новую строку и вносим в столбцы значения соответственно порядку, в каком столбцы добавлялись в таблицу.
		object.newString{eRA56yuDf~id,INVENTORY~position,<tag>~body} — создаём новую строку и вносим в столбцы значения, указывая в конце значения через тильду имя столбца. Если указано хотя бы одно значение через тильду, то все последующие будут вноситься либо в указанные так же через тильду столбцы, либо в последующие за указанными.

	delString — удаляет строку в таблице
	setShort — задаёт короткое имя таблице, по которому с ним можно работать в командах, при этом в именах массивов будет использовано заданное полное имя
	setCur — делает указанную таблицу текущей

	Неявный метод:
	object — или:
	bd.object — вернёт [avsbd_objecttype:data_table][avsbd_objectname:object][avsbd_objectcontent:Здесь будут перчислены названия созданных столбцов через запятую:avsbd_objectcontent]

-объект Столбец, методы/команды:-

	Стобец можно удалить только методом Таблицы. В столбце нельзя создавать новые строки. Единственное, что можно сделать со столбцом, это очистить, и возможно получить какие-то данные.

	clear — очищает стобец от данных.
		object.id.clear
	setCur - делает указанный столбец текущим

	Неявный метод:

	object.id — вернёт [avsbd_objecttype:column][avsbd_objectname:id][avsbd_objectcontent:Тип стобца, название массива и его размер:avsbd_objectcontent]

-объект Строка, методы/команды:-

	Точно так же. Нельзя удалить строку методом самой строки, это делается методом Таблицы. Однако можно очистить строку

	clear - очищает строку от данных
		object.12.clear — очищает двенадцатую строку в Таблице object
		12.clear — очищает 12 строку в текущей таблице
	setCur - устанавливает строку текущей
		12.setCur

	Неявный метод:

	object.12 — вернёт [avsbd_objecttype:string][avsbd_objectname:12][avsbd_objectcontent:Не знаю даже, что тут вернуть:avsbd_objectcontent]

-объект Ячейка, методы/команды-

	Обращение к объекту ячейка происходит через ссылки на столбец и строку, между которыми ставится тильда:

		id~12.addText{<body>} — в столбец "id", в 12-ю строку добавлен текст "<body>"

	addText — добавляет в ячейку текст. Это может быть текст любого рода, но не содержащий запятых и фигурных скобок. Чтобы добавить текст, содержащий запятые или фигурные скобки, воспользуйтесь дополнительными аргументами и ссылками на них. Если в ячейке уже содержится какой-то текст, то добавляемый текст будет добавлен через пробел от уже существующего.
		id~12.addText{<body>} — в столбец "id", в 12-ю строку добавлен текст "<body>"

	changeText — полностью меняет текст в ячейке
		id~12.changeText{<object>} — в столбце "id", в 12-ой строке полностью заменён текст на "<object>"

	tagNum — добавляет одиночный тег типа [tag:content], или заменяет его содержимое
		id~12.tagNum{color,аа0055} — добавляет тег [color:aa0055]

	tagCont — добавляет сдвоенный тег типа [tag:content:tag], или заменяет его содержимое
		id~12.tagCont{text,Старинный меч — он в сколах и царапинах.} — добавляем тег [text:Старинный меч — он в сколах и царапинах.:text]
		id~12.tagCont{,старый_меч} — добавляем идентификатор вида [:старый_меч:]

	tagUn — добавляет тег без содержимого, типа [tag]
		id~12.tagUn{number} — добавляем тег [number]
		id~12.tagUn{quest,real,move} — добавляем несколько одиночных тегов в ячейку

	delCont — удаляет сдвоенный тег из ячейки со всем содержимым
	delNum — удаляет одиночный тег из ячейки со всем содержимым
	delUn — удаляет тег без содержимого из ячейки
		id~12.delNum{color}
		id~12.delCont{text}
		id~12.delUn{number}

	getCont — возвращает всё содержимое ячейки полностью.

	Неявный метод:
	object.id~12 — вернёт [avsbd_objecttype:cell][avsbd_objectname:id~12][avsbd_objectcontent:Всё содержимое ячейки полностью:avsbd_objectcontent]

-объект тэг, методы/команды-
	
	Имена тегов чисто теоретически могут пересекаться с именами таблиц и столбцов, однако в таком случае нужно явно указывать полную ссылку до тега:

		object.id~12.id.changeCont{eRA56yuDf}

	changeCont — заменяет значение тега. Нет разницы, является ли тег одиночным или двойным, мы меняем его содержимое. Не работает для тегов без содержимого типа [tag].
		object.id~12.tagNum{id,123} — добавляем в 12-ю строку столбца $id_object тег [id:123]
		object.id~12.id.changeCont{eRA56yuDf} — заменяем тег [id:123] на [id:eRA56yuDf]

	addCont — добавляет к уже имеющемуся значению тега указанную строку текста без отступов (в отличие от текста добавляемого к ячейке)
		object.id~12.id.addCont{123} — заменяем тег [id:eRA56yuDf] на [id:eRA56yuDf123]

	tagNum, tagCont, tagUn, delCont, delNum, delUn — данные команды работают только для сдвоенных тегов, и они позволяют добавлять к содержимому сдвоенных тегов, и удалять из этого содержимого вложенные теги.
		id~12.tagCont{np,} — добавляем сдвоенный тег np без содержимого [np::np]
		id~12.np.tagUn{оружие,одноручное,меч} — добавляем в сдвоенный тег теги без содержимого: [np:[оружие][одноручное][меч]:np]
		id~12.np.tagNum{color,778800} — добавляем одиночный тег [np:[оружие][одноручное][меч][color:778800]:np]
		id~12.np.color.changeCont{446600} — меняем значение одиночного тега color в теге np [np:[оружие][одноручное][меч][color:446600]:np]

	getCont — возвращает значение тега (работает только для $func и @foo в qSpider)
		id~12.np.color.getCont — вернёт 446600 (содержимое тега для последнего случая)

	Неявный метод:
		object.id~12.np.color — вернёт [avsbd_objecttype:tag_num][avsbd_objectname:color][avsbd_objectcontent:446600:avsbd_objectcontent]
		object.id~12.np — вернёт [avsbd_objecttype:tag_cont][avsbd_objectname:np][avsbd_objectcontent:[оружие][одноручное][меч][color:446600]:avsbd_objectcontent]
		object.id~12.np.оружие — вернёт [avsbd_objecttype:tag_union][avsbd_objectname:оружие][avsbd_objectcontent::avsbd_objectcontent]

--Ссылки на текущие объекты в командах--

Если ссылки на текущие объекты в командах должны быть перечисленны до явно указанного объекта, их можно опустить.

curTable — текущая таблица

	curTable.delString{12} — удаляет двенадцатую строку из текущей Таблицы

curCol — текущий столбец

	object.curCol.clear — очищает текущий столбец в таблице object

curString — текущая строка

	object.curString.clear — очищает текущую строку в таблице object

Пример добавления в ячейку записи:

	bd.curTable.curCol~curString.addText{<body>} — в текущую ячейку добавляем текст "<body>"

В данном примере можно опустить ссылку на базу данных и на текущую Таблицу, оставив только ссылки на текущие Столбец и Строку:

	curCol~curString.addText{<body>}


