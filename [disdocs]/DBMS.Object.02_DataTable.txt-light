==Объект Таблица данных==

Таблица данных — это набор массивов, каждый из которых является столбцом такой таблицы. Соответственно строкой можно считать ряд записей во все массивы Таблицы данных под одним индексом.

/* Так была реализована моя первая таблица данных для всех объектов игры, в т.ч реплик диалогов, персонажей и прочего. Однако, впоследствии оказалось, что хранить все возможные объекты в одной таблице данных невозможно. Это просто перегружает таблицу, усложняет поиск и так далее. Проще разбить общую Таблицу на связанные ссылками Таблицы и таким образом организовать общую Базу данных. */

Так же частью Таблицы Данных является массив, описывающий свойства этой таблицы данных, см. ниже.

Возвращаемый тип: 'data_table'.

=Техническая структура Таблицы Данных=

Внимание! колонка первичных ключей создаётся автоматически и всегда носит название `id` и имеет тип `id_column`, несмотря на то, что написано ниже. Поэтому любая таблица данных всегда имеет колонку первичных ключей.

Это приводит к тому, что если вы создаёте новые колонки в таблице данных не сразу после её создания, а где-то в процессе игры, алгоритм циклом генерирует все пустые ячейки, индексируемые по первичному ключу. Это может существенно подвесить игру. Следует создавать колонки заблаговременно после создания таблицы данных!

Таблица данных представляет собой набор колонок и строк с данными. Каждая колонка технически является массивом, название которого состоит из названия таблицы данных и названия колонки. Например,
	* таблица данных `objects`
	* состоит из колонок `id`, `body`, `position`, `include`, `kolvo`

Технически это означает, что создаются массивы `objects_id`, `objects_body`, `objects_position`, `objects_include`, `objects_kolvo`.

Для описания таблицы используется массив, название которого соответствует идентификатору таблицы данных, т.е. `objects`. Посмотреть примерное заполнение такого массива можно в разделе "Свойства Таблицы Данных".

Строки таблицы формируются записью во все массивы колонок данных под одинаковым индексом.

Пример:

```qsp
$objects_id['d001']='d001' & $objects_body['d001']='[kind:старый_меч:kind]' & objects_kolvo['d001']=12
$objects_id['d002']='d002' & $objects_body['d002']='[kind:гнилое_яблоко:kind]' & objects_kolvo['d002']=3
$objects_id['d003']='d003' & $objects_body['d003']='[kind:радиоактивный_пепел:kind]' & objects_kolvo['d003']=9
```

=Команды для работы с таблицей данных=

--Создание таблицы данных--

Чтобы создать Таблицу данных используется метод .new_table для Базы данных.

Идентификатор таблицы должен соответствовать требованиям к имени массива, поскольку на основе этого идентификатора будет инициализирован массив, описывающий таблицу данных.

--Удаление таблицы данных--

Удаление таблицы данных происходит через метод базы данных .del_table.

При вызове данного метода полностью уничтожаются все массивы, соответствующие столбцам таблицы данных, а так же массив, описывающий таблицу данных.

В данном случае мы удаляем таблицу с идентификатором objects.

=Методы для работы с Таблицей Данных=

	* print - вывод всех свойств таблицы данных
	* set_cur - устанавливает таблицу данных, как текущую.
	* new_col — создаёт новую колонку (столбец в таблице)
	* del_col — удаляет столбец из таблицы
	* new_row — создаёт новую строку в таблице
	* del_row - удаляет строку из таблицы

--set_cur--

Данный метод позволяет установить таблицу данных текущей. Это в основном вспомогательный метод, так как любой другой метод, применяемый к таблице данных делает указанную таблицу данных текущей.

--print--

Данный метод выводит всю имеющуюся по таблице данных общую информацию. Информацию, выводимую с помощью этого метода, можно посмотреть в разделе "Свойства Таблицы Данных".

--new_сol--

Создаёт новую колонку указанного типа в Таблице Данных.

--del_сol--

Удаляет колонку из Таблицы Данных:

--new_row--

Создаёт новую строку в таблице данных и возвращает её идентификатор.

--del_row--

Удаляет строку из таблицы данных по идентификатору. Идентификаторы хранятся только в виде строк, даже если технически это порядковые номера.

=Свойства Таблицы Данных=

В данном разделе будут показаны типовые переменные Таблиц Данных на примере таблицы с идентификатором `objects`.

$objects['ID'] - идентификатор таблицы. Совпадает с названием массива, в котором хранится.
$objects['NAME'] — название таблицы данных. Это название должно выражать краткую суть таблицы.

$objects['columns'] - список колонок (столбцов) вида 'sid|uid|body|position|include|charge|count|run'.

$objects['current_col'] - идентификатор текущей колонки. Указатель на активную колонку.
$objects['current_row'] - идентификатор текущей строки. Указатель на активную строку.

$objects['primary_keys_type'] - вид первичных ключей. Доступны разнообразные настройки.

$objects['free_keys'] - список освободившихся ключей для порядковых ключей. Необходимо, чтобы не терять использованные ключи.

=Типы первичных ключей=

--Порядковые ключи--

* [hex:N] - первичные ключи генерируются, как порядковое шестнадцатерияное число из N символов. Это ограничит высоту таблицы данных максимальным возможным в этой таблице данных числом. Чтобы повторно использовать ключи от ранее созданных, а затем удалённых строк, введён специальный список освободившихся ключей. 
* [num:N] - первичные ключи генерируются в виде N-значного десятеричного числа. Это ограничит высоту таблицы данных максимальным возможным в такой таблице числом. Чтобы повторно использовать ключи от ранее созданных, а затем удалённых строк, введён специальный список освободившихся ключей.

--Псевдослучайные ключи--

* [msecscount] - первичные ключи будут генерироваться на основе данных из функции msecscount. Число преобразуется к положительному, затем к строке.
* [uuid] - первичные ключи генерируются в формате UUID.
* [rhex:N] - первичным ключом будет назначаться случайное шестнадцатеричное число, состоящее из не менее, чем 8 символов.
* [rnum:N] - первичным ключом будет назначаться случайное десятерично число, состоящее из не менее, чем 16 символов.
* [uid] - первичный ключ будет генерироваться из строки случайных букв и цифр плюс текущее абсолютное значение от msecscount
* [rstr:N] - первичный ключ генерируется, как случайный набор букв и цифр из N символов, но не менее 16 символов.
