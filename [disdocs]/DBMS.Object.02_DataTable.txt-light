==Объект Таблица данных==

Таблица данных — это набор массивов, каждый из которых является столбцом такой таблицы. Соответственно строкой можно считать ряд записей во все массивы Таблицы данных под одним индексом.

/* Так была реализована моя первая таблица данных для всех объектов игры, в т.ч реплик диалогов, персонажей и прочего. Однако, впоследствии оказалось, что хранить все возможные объекты в одной таблице данных невозможно. Это просто перегружает таблицу, усложняет поиск и так далее. Проще разбить общую Таблицу на связанные ссылками Таблицы и таким образом организовать общую Базу данных. */

Так же частью Таблицы Данных является массив, описывающий свойства этой таблицы данных, см. ниже.

=Команды для работы с таблицей данных=

--Создание таблицы данных--

Чтобы создать Таблицу данных используется метод .newTable{} для Базы данных:

	bd.newTable{идентификатор_таблицы,название_таблицы}

Идентификатор таблицы должен соответствовать требованиям к имени массива, поскольку на основе этого идентификатора будет инициализирован массив, описывающий таблицу данных. Название таблицы можно не указывать. Пример:

	bd.newTable{objects}

--Удаление таблицы данных--

Удаление таблицы данных происходит через метод базы данных .delTables{}. В фигурных скобках указываем один или несколько идентификаторов таблиц через запятую.

	bd.delTables{идентификатор_таблицы}
	bd.delTables{таблица1,таблица2,таблица3}

При вызове данного метода полностью уничтожаются все массивы, соответствующие столбцам таблицы данных, а так же массив, описывающий таблицу данных. Пример:

	bd.delTables{objects}

В данном случае мы удаляем таблицу с идентификатором objects.

=Методы для работы с Таблицей Данных=

	* неявный метод - вывод некоторых данных таблицы данных
	* print - вывод всех свойств таблицы данных
	* newCol — создаёт новую колонку (столбец в таблице)
	* delCols — удаляет несколько столбцов из таблицы
	* newRow — создаёт новую строку в таблице
	* delRows - удаляет несколько строк из таблицы

--Неявный метод--

Неявный метод применительно к таблице вернёт нам кортеж значений: ('data_table',идентификатор_таблицы,список колонок таблицы). Пример:

	bd.objects

Здесь мы вызвали неявный метод для таблицы с идентификатором objects. Если таблица существует, на выходе мы получим примерно такой кортеж:

	('data_table','objects','sid|uid|body|charge|position')

Здесь 'data_table' — это тип данных, к которым был применён неявный метод, 'objects' - идентификатор этих данных, а список столбцов - содержимое. Если для таблицы данных было указано имя, будет возвращено имя таблицы.

См. локацию edb.dt.implicit

=Свойства Таблицы Данных=

В данном разделе будут показаны типовые переменные Таблиц Данных на примере таблицы с идентификатором `objects`.

$objects['ID'] - идентификатор таблицы. Совпадает с названием массива, в котором хранится.
$objects['NAME'] — название таблицы данных. Это название должно выражать краткую суть таблицы. Хранится в ячейке ID['NAME'] - здесь вместо ID - идентификатор таблицы.

$objects['id_column'] - идентификатор колонки с уникальными айди для строк.

$objects['columns'] - список колонок (столбцов) вида:

```qsp
$objects['columns']='sid|uid|body|position|include|charge|count|run'
```

Некоторая информация о колонках закладывается в переменные таблицы данных вида:

$objects[id_col,'col_type'] — здесь id_col — это идентификатор колонки в таблице. В эти ячейки вносится тип содержащихся в колонках данных. Пример:

```qsp
$objects['sid','col_type']='str'
$objects['uid','col_type']='str'
$objects['body','col_type']='dict'
$objects['position','col_type']='str'
$objects['include','col_type']='str'
$objects['charge','col_type']='num'
$objects['count','col_type']='num'
$objects['run','col_type']='str'
```

--Возможные типы колонок--

str - это колонка, которая может содержать только простую строку
dict - это колонка, содержащая словарь значений. Словарь составляется из тегов типа "[tag:строка текста:tag]".
list - это строка, содержащая перечисленные через | значения
tuple - колонка со значениями кортежами
num - колонка с числовыми значениями
